name: Terraform init

# Controls when the workflow will run
on:
  pull_request:
    branches: [ main ]

  # Allows to run this workflow manually from the Actions tab.
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "terraform"
  terraform-init:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: 'Terraform Plan'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      AZURE_CREDENTIALS: ${{secrets.AZURE_CREDENTIALS}}
      DEPLOYMENT_ENV: dev #(options are 'dev','test','prod') 

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token.
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIAL}}
        enable-AzPSSession: true
        

    # Initialize Terraform working directory by creating initial files and loading remote state.
    - name: Terraform Init
      run: terraform init
   
